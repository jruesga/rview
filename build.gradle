/*
 * Copyright (C) 2016 Jorge Ruesga
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
    libraries = [
        androidx_appcompat          : '1.0.2',
        androidx_browser            : '1.0.0',
        androidx_cardview           : '1.0.0',
        androidx_exifinterface      : '1.0.0',
        androidx_legacy             : '1.0.0',
        material                    : '1.0.0',
        play_services_auth          : '16.0.1',
        firebase_core               : '16.0.9',
        firebase_messaging          : '18.0.0',
        gson                        : '2.8.5',
        retrofit2                   : '2.5.0',
        // Keep okHttp in 3.12.x, since 3.13+ requires Android 5
        okhttp3                     : '3.12.2',
        okio                        : '2.2.2',
        okhttp_digest               : 'f13c5b8f79',
        rxjava                      : '2.2.8',
        rxandroid                   : '2.1.1',
        rxloader2                   : 'edeebf0a1a',
        // Keep commons-io in 2.5. Prior android versions doesn't have fully support for Files api.
        commons_io                  : '2.5',
        antlrv3                     : '3.5.2',
        smoothprogressbar           : '1.1.0',
        glide                       : '4.9.0',
        prettytime                  : '4.0.2.Final',
        flexboxlayout               : '1.1.0',
        floatingsearchview          : '2d435bead5',
        androidsvg                  : '3511e13649',
        keyboardvisibilityevent     : '2.3.0',
        better_link_movement_method : '2.2.0',
        aboutlibraries              : '6.2.3',
        crashlytics                 : '2.10.0',
        crashlytics_core            : '2.7.0',
        crashlytics_answers         : '1.4.7'
    ]

    testLibraries = [
        junit                       : '4.12',
        hamcrest                    : '2.1',
        mockito                     : '2.27.0',
        powermock                   : '2.0.2',
        robolectric                 : '4.2.1',
        base64                      : '2.3.9'
    ]
}

allprojects {
    buildscript {
        repositories {
            google()
            jcenter()
            maven { url 'https://maven.fabric.io/public' }
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:3.5.0'
            classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
            // https://s3.amazonaws.com/fabric-artifacts/public/io/fabric/tools/gradle/maven-metadata.xml
            classpath 'io.fabric.tools:gradle:1.28.1'
        }
    }

    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

subprojects {
    afterEvaluate {project ->
        dependencies {
            testImplementation "junit:junit:${testLibraries.junit}"
            testImplementation "org.hamcrest:hamcrest-core:${testLibraries.hamcrest}"
            testImplementation "org.hamcrest:hamcrest-library:${testLibraries.hamcrest}"
            testImplementation "org.mockito:mockito-core:${testLibraries.mockito}"
            testImplementation "org.powermock:powermock-module-junit4:${testLibraries.powermock}"
            testImplementation "org.powermock:powermock-module-junit4-rule:${testLibraries.powermock}"
            testImplementation "org.powermock:powermock-api-mockito2:${testLibraries.powermock}"
            testImplementation "org.robolectric:robolectric:${testLibraries.robolectric}"
        }

        if (project.plugins.hasPlugin('android') || project.plugins.hasPlugin('android-library')) {
            android {
                compileSdkVersion 28
                // https://developer.android.com/studio/releases/build-tools.html
                buildToolsVersion '28.0.3'

                defaultConfig {
                    minSdkVersion 16
                    targetSdkVersion 28

                    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                }

                compileOptions {
                    sourceCompatibility = JavaVersion.VERSION_1_8
                    targetCompatibility = JavaVersion.VERSION_1_8
                }

                packagingOptions {
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/rxjava.properties'
                }

                testOptions.unitTests.includeAndroidResources = true

                testOptions {
                    unitTests.all {
                        testLogging {
                            events "passed", "skipped", "failed", "standardError"
                            outputs.upToDateWhen {false}
                        }
                    }
                }
            }
        }
    }
}